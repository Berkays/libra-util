modules:
module M {
    public foo(x: u64): u64 {
        return copy(x)*2;
    }
}

module N {
    public bar(x: u64): u64 {
        return copy(x)*3;
    }
}

script:
import Transaction.M;
import Transaction.N;

main() {
    let x: u64;
    let y: u64;
    x = N.bar(7);
    y = M.foo(move(x));
    assert(move(y) == 41, 42);
    return;
}

// The following directives check that
//     1) There are two function definitions in the compiled module.
//     2) There are no verification errors.
//     3) There is an AssertionFailure in the transaction output.

// stage: compiler
// check: CompiledModule
// check: FunctionDefinition
// check: CompiledModule
// check: FunctionDefinition

// stage: verifier
// not: VerificationError

// stage: runtime
// check: AssertionFailure
