modules:
module Token {
    resource T { }

    public new(): R#Self.T {
        return T{ };
    }

    public has(addr: address): bool {
        let yes: bool;
        yes = exists<T>(move(addr));
        return move(yes);
    }

    public get(addr: address): &mut R#Self.T {
        let t_ref: &mut R#Self.T;
        t_ref = borrow_global<T>(move(addr));
        return move(t_ref);
    }

    public publish(t: R#Self.T) {
        move_to_sender<T>(move(t));
        return;
    }

}
script:
import Transaction.Token;

main() {
    let addr1: address;
    let struct1: &mut R#Token.T;

    addr1 = 0x0111111111111111111111111111111111111111111111111111111111111110;
    struct1 = Token.get(move(addr1));
    release(move(struct1));

    return;
}

// check: Execution(MissingData)
